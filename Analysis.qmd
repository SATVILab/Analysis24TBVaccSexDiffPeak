---
title: Analyse peak response
format:
  html:
    embed-resources: true
---

```{r}
#| include: false
library(ggplot2)
library(tibble)
library(tidyr)
library(betareg)
library(statmod)
library(numDeriv)
library(betareg)
library(car)
library(lmtest)
library(dplyr)
theme_cowplot_bg <- function(font_size = 16) {
  theme_cowplot(font_size = font_size) +
  theme(
    panel.background = element_rect(fill = "white"),
    plot.background = element_rect(fill = "white")
  )
}
fn_vec <- list.files("R", pattern = "\\.R$", full.names = TRUE)
for (i in seq_along(fn_vec)) {
  source(fn_vec[[i]])
}
library(stringr)
```


## Data prep

Here we load the data:

```{r}
library(DataTidy24TBVaccSexDiff)
data("data_tidy_vacc_freq")
```

Now we calculate the summed response and the profile response, and then extract the peak response:

```{r}
data_tidy_vacc_summed <- data_tidy_vacc_freq |>
  vacc_calc_response_summed("response") |>
  vacc_calc_vaccine_induced_response("response") |>
  vacc_set_neg_to_zero("response") |>
  vacc_extract_peak() |>
  dplyr::filter(subset == "cd4")
data_tidy_vacc_summed

data_tidy_vacc_profile <- data_tidy_vacc_freq |>
  vacc_calc_response_profile("response") |>
  vacc_calc_vaccine_induced_response("response") |>
  vacc_set_neg_to_zero("response") |>
  vacc_extract_peak() |>
  dplyr::filter(subset == "cd4")
data_tidy_vacc_profile

data_tidy_vacc_raw_profile <- data_tidy_vacc_freq |>
  vacc_calc_response_profile(cn_resp = "response")|>
  vacc_extract_peak()

data_tidy_vacc_vi_profile <- data_tidy_vacc_freq |>
  vacc_calc_vaccine_induced_response(cn_resp = "response") |>
  vacc_calc_response_profile(cn_resp = "response")|>
  vacc_extract_peak()

data_tidy_vacc_raw_fds_prop <- data_tidy_vacc_freq |>
  vacc_calc_fds_prop(cn_resp = "response")|>
  vacc_extract_peak() |>
  dplyr::filter(subset == "cd4")

data_tidy_vacc_vi_fds_prop <-  data_tidy_vacc_freq |>
  vacc_calc_vaccine_induced_response(cn_resp = "response") |>
  vacc_calc_fds_prop(cn_resp = "response") |>
  vacc_extract_peak() |>
  dplyr::filter(subset == "cd4")
```

## Data exploration

### Sample sizes

```{r}
knitr::kable(data_tidy_vacc_summed |>
  dplyr::mutate(vaccine = stringr::str_to_upper(vaccine)) %>%
  dplyr::group_by(vaccine, sex, timepoint, infxn) |>
  dplyr::summarise(count = dplyr::n(), .groups = "drop") |>
  dplyr::rename(Vaccine = vaccine, Sex = sex,Timepoint = timepoint,Infxn = infxn,Count = count)|>
  dplyr::arrange(Vaccine, Infxn, Sex))
```

## Analysis

### Data exploration

```{r}
#install.packages("cowplot")
library(cowplot)
```

Table of data:
```{r}
knitr::kable(data_tidy_vacc_freq|>dplyr::filter(ptid=='bcg-040-21' & subset=='cd4'& timepoint=="70"))
knitr::kable(data_tidy_vacc_summed|>dplyr::filter(ptid=='bcg-040-21'))
```


Boxplot of summed response by infection status:

```{r}
boxplot1 <- ggplot(data_tidy_vacc_summed, aes(x = infxn, y = response, fill = infxn)) +
  geom_boxplot() +
  facet_wrap(~ vaccine)+
  labs(title = "Summed Response by Infection Status", x = "Infection Status", y = "Summed Response") +
  theme_cowplot_bg()
ggsave("Boxplot of Summed Response by Infection Status.png", boxplot1)
```

Boxplot of summed response by sex:

```{r}
boxplot2 <- ggplot(data_tidy_vacc_summed, aes(x = sex, y = response, fill = sex)) +
  geom_boxplot() +
  facet_wrap(~ vaccine)+
  labs(title = "Summed Response by Sex", x = "Sex", y = "Summed Response") +
  theme_cowplot_bg()
ggsave("Boxplot of Summed Response by Sex.png", boxplot2)
```

Boxplot of summed response by sex and infection status:

```{r}
boxplot3 <- ggplot(data_tidy_vacc_summed, aes(x = str_to_title(sex), y = response, fill = str_to_title(sex))) +
  geom_boxplot() +
  facet_grid(vaccine ~ str_to_title(infxn),labeller = labeller(vaccine = toupper)) +
  labs(title = " ", x = "Sex", y = "Summed Response") +
  theme_cowplot_bg()+
  theme(
    axis.text.x = element_blank(),        # Remove x-axis text
    axis.ticks.x = element_blank(),       # Remove x-axis ticks
    panel.grid.major.x = element_blank(), # Optionally remove major x-axis grid lines
    panel.grid.minor.x = element_blank(), # Optionally remove minor x-axis grid lines
    legend.position = 'bottom',
     strip.text = element_text(size = 12,  # Adjust facet label size
    face = "bold"),
    axis.text.y = element_text(size = 13,   # Adjust y-axis title size
    face = "bold"),
    legend.text = element_text(size = 12) ) + # Set y-axis title font style             # Place legend at the bottom                   
    background_grid(major='y')+
  guides(fill = guide_legend(title = NULL))

# Save the plot
ggsave("Boxplot of Summed Response by Sex and Infection Status.png",boxplot3)
```

### Analysis of summed response

#### Mann-Whitney

Perform Mann-Whitney Tests :

```{r}
Mann_Whitney_tests <- list(
  infxn = wilcox.test(response ~ infxn, data = data_tidy_vacc_summed),
  sex = wilcox.test(response ~ sex, data = data_tidy_vacc_summed)
)

mw_tbl_summed <- purrr::map_df(unique(data_tidy_vacc_summed$infxn), function(infxn) {
  data_tidy_vacc_sub <- data_tidy_vacc_summed |>
    dplyr::filter(infxn == .env$infxn)
  purrr::map_df(unique(data_tidy_vacc_sub$vaccine), function(vaccine) {
    data_tidy_vacc_sub_sub <- data_tidy_vacc_sub |>
      dplyr::filter(vaccine == .env$vaccine)
    # browser()
    resp_vec_male <- data_tidy_vacc_sub_sub |>
      dplyr::filter(sex == "male") |>
      dplyr::pull(response)
    resp_vec_female <- data_tidy_vacc_sub_sub |>
      dplyr::filter(sex == "female") |>
      dplyr::pull(response)
    p_val <- wilcox.test(resp_vec_male, resp_vec_female)$p.value
    tibble::tibble(
      infxn = infxn, vaccine = vaccine, p_val = p_val
    )
  })
})

mw_tbl_summed <- mw_tbl_summed |>
  dplyr::group_by(infxn) |>
  dplyr::mutate(q_val = p.adjust(p_val, method = "holm")) |>
  dplyr::ungroup()
mw_tbl_summed
```

#### Kruskal-Wallis

This repeats the Mann-Whitney tests.

Kruskal-Wallis Test:

```{r}
library(tidyr)
library(dplyr)
library(purrr)

vacc_inf_sex <- with(data_tidy_vacc_summed, interaction(vaccine, infxn, sex))
test <- kruskal.test(response ~ vacc_inf_sex, data = data_tidy_vacc_summed)
test

results <- data_tidy_vacc_summed |>
  group_by(vaccine, infxn) |>
  nest() |>
  mutate(kruskal_test = map(data, ~ kruskal.test(response_sqrt ~ sex, data = .x)),
         p_value = map_dbl(kruskal_test, "p.value"))

results |>
  select(vaccine, infxn, p_value)
```

#### Beta regression

##### Data transformation

Obtain the square root of the summed response:

```{r}
data_tidy_vacc_summed <- data_tidy_vacc_summed |>
  dplyr::mutate(response_proportion = sqrt(response / 100))
```

Boxplot of square root transformed summed responses by sex and infection status:

```{r}
boxplot4 <- ggplot(data_tidy_vacc_summed, aes(x = sex, y = response_proportion, fill = sex)) +
  geom_boxplot() +
  facet_grid(vaccine ~ infxn) +
  labs(title = "Square Root of Summed Response by Sex and Infection Status", x = "Sex", y = "Square Root of Summed Response") +
  theme_cowplot_bg() 

# Save the plot
ggsave("Boxplot of Square Root Summed Response by Sex and Infection Status.png", boxplot4)
```

Skewness of Responses:

```{r}
histogram1 <- ggplot(data_tidy_vacc_summed, aes(x = response_proportion)) +
  geom_histogram(binwidth = 0.05, fill = 'blue', color = 'black', alpha = 0.7) +
  facet_wrap(~ vaccine) +
  labs(title = "Histogram of Responses by Vaccine",
       x = "Square Root of Summed Response",
       y = "Frequency") +
  theme_cowplot_bg()
ggsave('Histogram of skewness of square root of summed responses by vaccine.png',histogram1)     
```

##### Simple regression

Fit Beta Regression Models of Uninfected to examine the effect of sex on response for each vaccine, for each vaccine individually:

```{r}
data_tidy_vacc_summed_uninf <- data_tidy_vacc_summed |>  
    dplyr::filter(infxn == "uninfected") 

beta_h1_uninf <- betareg( 
  response_proportion ~ sex, data = data_tidy_vacc_summed_uninf |>
    dplyr::filter(vaccine == "h1")) 

beta_h56_uninf <- betareg(response_proportion ~ sex,data = data_tidy_vacc_summed_uninf |> 
   dplyr::filter(vaccine == "h56")) 

beta_mva85a_uninf<-betareg(response_proportion ~ sex,data =data_tidy_vacc_summed_uninf |> 
   dplyr::filter(vaccine == "mva85a"))

beta_bcg_uninf <- betareg(response_proportion ~ sex, data =data_tidy_vacc_summed_uninf |> 
   dplyr::filter(vaccine == "bcg"))  

beta_m72_uninf <- betareg(response_proportion ~ sex, data =data_tidy_vacc_summed_uninf |> 
   dplyr::filter(vaccine == "m72"))  

#extract p-values
p_vec <- c(
  summary(beta_h1_uninf)$coefficients$mu[-1, "Pr(>|z|)"],
  summary(beta_h56_uninf)$coefficients$mu[-1, "Pr(>|z|)"],
  summary(beta_mva85a_uninf)$coefficients$mean[-1, "Pr(>|z|)"],
  summary(beta_bcg_uninf)$coefficients$mu[-1, "Pr(>|z|)"],
  summary(beta_m72_uninf)$coefficients$mean[-1, "Pr(>|z|)"]
)
p_vec

#Holm's Procedure
p.adjust(p_vec, method = "holm")
```

##### Multiple regression

Fit Beta Regression Model of Uninfected and Infected to examine the effect of interaction between sex and vaccine on response :

```{r}
beta_uninfected <- betareg(
  response_proportion ~ sex*vaccine,
  data = data_tidy_vacc_summed |> dplyr::filter(infxn == "uninfected")
)
summary(beta_uninfected)
```

Fit Beta Regression Model of Infected to examine the effect of interaction between sex and vaccine on response :

```{r}
beta_infected <- betareg(
  response_proportion ~ sex*vaccine,
  data = data_tidy_vacc_summed |> dplyr::filter(infxn == "infected")
  )

beta_infected <- betareg(
  response_proportion ~ vaccine*sex,
  data_tidy_vacc_summed |> 
    dplyr::filter(infxn =="infected") |>
    dplyr::mutate(vaccine = factor(.data$vaccine, levels = c("h56", "h1", "mva85a", "m72"))))

summary(beta_infected)                            

ggsave('Table of estimates of effect sizes and CI.png',plot_infected2,width = 10, height = 6)
```

###### Residual plots

Create Residual Plots for the beta regression models of Uninfected and Infected:

```{r}
#residual plot for beta_uninfected model

data_uninfected <- data_tidy_vacc_summed %>%
  dplyr::filter(infxn == "uninfected") %>%
  dplyr::mutate(predicted = predict(beta_uninfected, type = "response"),
         residuals = residuals(beta_uninfected, type = "pearson"))

beta_residual1 <- ggplot(data_uninfected, aes(x = predicted, y = residuals)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
  labs(title = "Residual Plot for Beta Regression Model of Uninfected",
       x = "Predicted Values",
       y = "Residuals") +
  theme_cowplot_bg()
ggsave('Residual Plot for Beta Regression Model of Uninfected.png',beta_residual1)

#residual plot for beta_infected model

data_infected <- data_tidy_vacc_summed |>
  dplyr::filter(infxn == "infected") |>
  dplyr::mutate(predicted = predict(beta_infected, type = "response"),
         residuals = response_proportion - predicted)

beta_residual2 <- ggplot(data_infected, aes(x = predicted, y = residuals)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
  labs(title = "Residual Plot for Beta Regression Model of Infected",
       x = "Predicted Values",
       y = "Residuals") +
  theme_cowplot_bg()
ggsave('Residual Plot for Beta Regression Model of Infected.png',beta_residual2)

# Plotting the residuals for infected
png("residuals_infected.png")
plot(beta_infected$residuals, main = "Residuals of the infected Beta Regression Model",ylab='Residuals')
abline(h= 0, col= "red", lwd= 2)
dev.off()
```

Exploration of Residuals for uninfected Individuals:

```{r}
# Add residuals to the dataset
data_uninfected_residuals <-  data_tidy_vacc_summed %>%
  dplyr::filter(infxn == "uninfected") %>%
  dplyr::mutate(residuals = beta_uninfected$residuals)

# Summarize residuals by vaccine
residual_summary <- data_uninfected_residuals |> 
  dplyr::group_by(vaccine) |> 
  dplyr::summarise(mean_residual = mean(residuals, na.rm = TRUE),
                   sd_residual = sd(residuals, na.rm = TRUE),
                   min_residual = min(residuals, na.rm = TRUE),
                   max_residual = max(residuals, na.rm = TRUE))

# Boxplot of residuals by vaccine
residual_vacc_uninf <- ggplot(data_uninfected_residuals, aes(x = vaccine, y = residuals, fill= vaccine))+
  geom_boxplot() +
  labs(y = "Residuals", x = "Vaccine") +
  scale_x_discrete(labels = toupper) +
  scale_fill_manual(
    values = c("h56" = "red", "h1" = "blue", "mva85a" = "purple", "m72" = "green", "bcg" = "orange"),  # Capitalized keys
    labels = c("H56", "H1", "MVA85A", "M72", "BCG")  # Capitalized labels for the legend
  ) +
  theme_cowplot_bg()+
  guides(fill = guide_legend(title = "Vaccine"))  # Set the legend title to "Vaccine"
ggsave('Residual by Vaccine for Uninfected Individuals.png',residual_vacc_uninf)

# Q-Q plot for the residuals of the beta regression model
png("QQ_Uninf_peak.png")
qqnorm(beta_uninfected$residuals, main="")
qqline(beta_uninfected$residuals, col = "red", lwd = 2)
dev.off()
```

Exploration of Residuals for infected Individuals:

```{r}
# Add residuals to the dataset
data_infected_residuals <-  data_tidy_vacc_summed %>%
  dplyr::filter(infxn == "infected") %>%
  dplyr::mutate(residuals = beta_infected$residuals)

# Summarize residuals by vaccine
residual_summary <- data_infected_residuals |> 
  dplyr::group_by(vaccine) |> 
  dplyr::summarise(mean_residual = mean(residuals, na.rm = TRUE),
                   sd_residual = sd(residuals, na.rm = TRUE),
                   min_residual = min(residuals, na.rm = TRUE),
                   max_residual = max(residuals, na.rm = TRUE))

# Boxplot of residuals by vaccine
residual_vacc_inf <- ggplot(data_infected_residuals, aes(x = vaccine, y = residuals, fill= vaccine)) +
  geom_boxplot() +
  labs(y = "Residuals", x = "Vaccine") +
  scale_x_discrete(labels = toupper) +
  scale_fill_manual(
    values = c("h56" = "red", "h1" = "blue", "mva85a" = "purple", "m72" = "green"),  # Capitalized keys
    labels = c("H56", "H1", "MVA85A", "M72", "BCG")  # Capitalized labels for the legend
  ) +
  theme_cowplot_bg()+
  guides(fill = guide_legend(title = "Vaccine"))  # Set the legend title to "Vaccine"
ggsave('Residual by Vaccine for Infected Individuals.png',residual_vacc_inf)

# Q-Q plot for the residuals of the beta regression model
png("QQ_Inf_peak.png")
qqnorm(beta_infected$residuals, main="")
qqline(beta_infected$residuals, col = "red", lwd = 2)
dev.off()
```

Fit Beta Regression Models of Infected to examine the effect of sex on response for each vaccine :

```{r}
data_tidy_vacc_summed_inf <- data_tidy_vacc_summed |>  
    dplyr::filter(infxn == "infected") 

beta_h1_inf <- betareg(
  response_proportion ~ sex, 
  data = data_tidy_vacc_summed_inf |>
    dplyr::filter(vaccine == "h1")
  ) 

beta_h56_inf <- betareg( response_proportion ~ sex,  data = data_tidy_vacc_summed_inf |> 
   dplyr::filter(vaccine == "h56")) 

beta_mva85a_inf <- betareg( response_proportion ~ sex,data = data_tidy_vacc_summed_inf |> 
   dplyr::filter(vaccine == "mva85a"))
beta_m72_inf <- betareg( response_proportion ~ sex,data = data_tidy_vacc_summed_inf |> 
   dplyr::filter(vaccine == "m72"))

#extract p-values
p_vec <- c(
  summary(beta_h1_inf)$coefficients$mu[-1, "Pr(>|z|)"],
  summary(beta_h56_inf)$coefficients$mu[-1, "Pr(>|z|)"],
  summary(beta_mva85a_inf)$coefficients$mu[-1, "Pr(>|z|)"],
  summary(beta_m72_inf)$coefficients$mean[-1, "Pr(>|z|)"]
)
p_vec

#Holm's Procedure
p.adjust(p_vec, method = "holm")
```

##### Global test for sex effect for at least one vaccine

For Infected Individuals:

```{r}
full_model_inf <- betareg(
  response_proportion ~ sex*vaccine,
  data = data_tidy_vacc_summed |> 
    dplyr::filter(infxn =="infected")
)
null_model_inf <- betareg(
  response_proportion ~ vaccine,
  data = data_tidy_vacc_summed|>
    dplyr::filter(infxn == "infected")
)

summary_full <- summary(full_model_inf)
summary_null <- summary(null_model_inf)

# Wald test
Wald_inf <- car::linearHypothesis(
  full_model_inf,
  c("sexmale = 0",
  "sexmale:vaccineh56 = 0",
  "sexmale:vaccinemva85a = 0",
  "sexmale:vaccinem72 = 0"
  )
)

# likelihood ratio test
likelihood_inf <- lmtest::lrtest(full_model_inf, null_model_inf)

# extract p-values
p_vec_global <- c(Wald_inf$`Pr(>Chisq)`[2],likelihood_inf$`Pr(>Chisq)`[2])

inf_tbl_global <- tibble(
  Test = c("Wald", "Likelihood Ratio"),
  `P-value` = p_vec_global,
  `Q-value` = p.adjust(p_vec_global, method = "holm")
)
```

For Uninfected Individuals:

```{r}
full_model_uninf <- betareg(response_proportion ~ vaccine*sex, 
                    data = data_tidy_vacc_summed|>
                 dplyr::filter(infxn == "uninfected")|>
    dplyr::mutate(vaccine = factor(.data$vaccine, levels = c("h56", "h1", "mva85a","bcg", "m72"))))
​
null_model_uninf <- betareg(response_proportion ~ vaccine,
                   data = data_tidy_vacc_summed|>
                dplyr::filter(infxn == "uninfected"))

summary_full_uninf <- summary(full_model_uninf)
summary_null_uninf <- summary(null_model_uninf)

#extract p-values
p_vec <- c(mean(summary_full_uninf$coefficients$mu[-1, "Pr(>|z|)"]), 
           mean(summary_null_uninf$coefficients$mu[-1, "Pr(>|z|)"]))
p_vec

#Holm's Correction
p.adjust(p_vec, method = "holm")

# Wald test
Wald_uninf <- car::linearHypothesis(full_model_uninf, c("sexmale = 0", "vaccineh1:sexmale = 0","vaccinebcg:sexmale = 0", "vaccinemva85a:sexmale = 0", "vaccinem72:sexmale = 0"))

# likelihood ratio test
likelihood_uninf <- lmtest::lrtest(full_model_uninf, null_model_uninf)

# extract p-values
p_vec <- c(Wald_uninf$`Pr(>Chisq)`[2],likelihood_uninf$`Pr(>Chisq)`[2])
p_vec

# Holm's Correction
p.adjust(p_vec, method = "holm")
```

##### Getting per-vaccine sex effect estimates and inference

###### Infected

```{r}
full_model_inf_h56 <- betareg(
  response_proportion ~ sex * vaccine,
  data_tidy_vacc_summed |> 
    dplyr::filter(infxn =="infected") |>
    dplyr::mutate(vaccine = factor(
      .data$vaccine, levels = c("h56", "h1", "mva85a", "m72")))
  )
est_h56 <- summary(full_model_inf_h56)$coefficients[[1]]["sexmale", "Estimate"]
p_val_h56 <- summary(full_model_inf_h56)$coefficients[[1]]["sexmale", "Pr(>|z|)"]
ci_h56 <- confint(full_model_inf_h56)[2, c("2.5 %", "97.5 %")]
h56_row <- tibble(
  Vaccine = "H56",
  Estimate = est_h56,
  `95% CI Lower` = ci_h56[1],
  `95% CI Upper` = ci_h56[2],
  `P-value` = p_val_h56
)

# mva85a
full_model_inf_mva85a <- betareg(
  response_proportion ~ sex*vaccine,
  data_tidy_vacc_summed |> 
    dplyr::filter(infxn =="infected") |>
    dplyr::mutate(vaccine = factor(
      .data$vaccine, levels = c("mva85a", "h56", "h1", "m72"))
    )
  )
est_mva85a <- summary(full_model_inf_mva85a)$coefficients[[1]]["sexmale", "Estimate"]
p_val_mva85a <- summary(full_model_inf_mva85a)$coefficients[[1]]["sexmale", "Pr(>|z|)"]
ci_mva85a <- confint(full_model_inf_mva85a)[2, c("2.5 %", "97.5 %")]
mva85a_row <- tibble(
  Vaccine = "MVA85A",
  Estimate = est_mva85a,
  `95% CI Lower` = ci_mva85a[1],
  `95% CI Upper` = ci_mva85a[2],
  `P-value` = p_val_mva85a
)

# h1
full_model_inf_h1 <- betareg(
  response_proportion ~ sex*vaccine,
  data_tidy_vacc_summed |> 
    dplyr::filter(infxn =="infected") |>
    dplyr::mutate(vaccine = factor(
      .data$vaccine, levels = c("h1", "mva85a", "h56", "m72"))
    )
  )
est_h1 <- summary(full_model_inf_h1)$coefficients[[1]]["sexmale", "Estimate"]
p_val_h1 <- summary(full_model_inf_h1)$coefficients[[1]]["sexmale", "Pr(>|z|)"]
ci_h1 <- confint(full_model_inf_h1)[2, c("2.5 %", "97.5 %")]
h1_row <- tibble(
  Vaccine = "H1",
  Estimate = est_h1,
  `95% CI Lower` = ci_h1[1],
  `95% CI Upper` = ci_h1[2],
  `P-value` = p_val_h1
)

full_model_inf_m72 <- betareg(
  response_proportion ~ sex*vaccine,
  data = data_tidy_vacc_summed |> 
    dplyr::filter(infxn == "infected") |>
    dplyr::mutate(
      vaccine = factor(.data$vaccine, levels = c("m72", "h1", "mva85a", "h56"))
    )
  )
est_m72 <- summary(full_model_inf_m72)$coefficients[[1]]["sexmale", "Estimate"]
p_val_m72 <- summary(full_model_inf_m72)$coefficients[[1]]["sexmale", "Pr(>|z|)"]
ci_m72 <- confint(full_model_inf_m72)[2, c("2.5 %", "97.5 %")]
m72_row <- tibble(
  Vaccine = "M72",
  Estimate = est_m72,
  `95% CI Lower` = ci_m72[1],
  `95% CI Upper` = ci_m72[2],
  `P-value` = p_val_m72
)

inf_tbl_inf <- bind_rows(h56_row, mva85a_row, h1_row, m72_row)
inf_tbl_inf <- inf_tbl_inf |> 
  dplyr::mutate(`Q-value` = p.adjust(`P-value`, method = "holm")) |>
  dplyr::select(Vaccine, Estimate, `P-value`, `Q-value`, `95% CI Lower`, `95% CI Upper`)

inf_tbl_inf <- inf_tbl_inf |>
  dplyr::mutate(
    `P-value` = ifelse(`P-value` < 0.001, "<0.001", round(`P-value`, 3))
  )

# Plot with p-values
p_inf <- ggplot(
  inf_tbl_inf,
  aes(
    x = Vaccine,
    y = Estimate,
    ymin = `95% CI Lower`,
    ymax = `95% CI Upper`,
    color = Vaccine
  )
) +
  theme_cowplot_bg() +
  cowplot::background_grid(major = "y") + 
  geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
  geom_pointrange() +
  labs(x = "Vaccine", y = "Sex effect") +
  geom_errorbar(aes(ymin = `95% CI Lower`, ymax = `95% CI Upper`), width = 0.1) +
  scale_color_manual(
    values = c("H56" = "red", "H1" = "blue", "MVA85A" = "purple", "M72" = "green")
  ) +
  scale_y_continuous(limits = c(NA, 0.8)) +
  theme(
    legend.position = "none",
    axis.title.x = element_text(size = 20),  # Increase x-axis label size
    axis.title.y = element_text(size = 20),   # Increase y-axis label size
    axis.text.x = element_text(size = 19),   # Adjust x-axis tick label size
    axis.text.y = element_text(size = 19)  
  ) +
  # Add p-value text labels
  geom_text(
    aes(label = `P-value`, y =  `95% CI Upper`+0.04), # Adjust the y position for better placement
    vjust = -0.5,
    size = 6,
    color = "black"
  )

path_fig_inf <- "Plot of estimates of effect sizes and CI infected.pdf"
ggsave(
  path_fig_inf,
  p_inf,
  width = 10,
  height = 6
)
```

###### Uninfected

```{r}
# h56
full_model_uninf_h56 <- betareg(
  response_proportion ~ sex * vaccine,
  data_tidy_vacc_summed |> 
    dplyr::filter(infxn == "uninfected") |>
    dplyr::mutate(vaccine = factor(
      .data$vaccine, levels = c("h56", "h1", "mva85a", "m72", "bcg")))
)
est_h56_uninf <- summary(full_model_uninf_h56)$coefficients[[1]]["sexmale", "Estimate"]
p_val_h56_uninf <- summary(full_model_uninf_h56)$coefficients[[1]]["sexmale", "Pr(>|z|)"]
ci_h56_uninf <- confint(full_model_uninf_h56)[2, c("2.5 %", "97.5 %")]
h56_row_uninf <- tibble(
  Vaccine = "H56",
  Estimate = est_h56_uninf,
  `95% CI Lower` = ci_h56_uninf[1],
  `95% CI Upper` = ci_h56_uninf[2],
  `P-value` = p_val_h56_uninf
)

# mva85a
full_model_uninf_mva85a <- betareg(
  response_proportion ~ sex * vaccine,
  data_tidy_vacc_summed |> 
    dplyr::filter(infxn == "uninfected") |>
    dplyr::mutate(vaccine = factor(
      .data$vaccine, levels = c("mva85a", "h56", "h1", "m72", "bcg"))
    )
)
est_mva85a_uninf <- summary(full_model_uninf_mva85a)$coefficients[[1]]["sexmale", "Estimate"]
p_val_mva85a_uninf <- summary(full_model_uninf_mva85a)$coefficients[[1]]["sexmale", "Pr(>|z|)"]
ci_mva85a_uninf <- confint(full_model_uninf_mva85a)[2, c("2.5 %", "97.5 %")]
mva85a_row_uninf <- tibble(
  Vaccine = "MVA85A",
  Estimate = est_mva85a_uninf,
  `95% CI Lower` = ci_mva85a_uninf[1],
  `95% CI Upper` = ci_mva85a_uninf[2],
  `P-value` = p_val_mva85a_uninf
)

# h1
full_model_uninf_h1 <- betareg(
  response_proportion ~ sex * vaccine,
  data_tidy_vacc_summed |> 
    dplyr::filter(infxn == "uninfected") |>
    dplyr::mutate(vaccine = factor(
      .data$vaccine, levels = c("h1", "mva85a", "h56", "m72", "bcg"))
    )
)
est_h1_uninf <- summary(full_model_uninf_h1)$coefficients[[1]]["sexmale", "Estimate"]
p_val_h1_uninf <- summary(full_model_uninf_h1)$coefficients[[1]]["sexmale", "Pr(>|z|)"]
ci_h1_uninf <- confint(full_model_uninf_h1)[2, c("2.5 %", "97.5 %")]
h1_row_uninf <- tibble(
  Vaccine = "H1",
  Estimate = est_h1_uninf,
  `95% CI Lower` = ci_h1_uninf[1],
  `95% CI Upper` = ci_h1_uninf[2],
  `P-value` = p_val_h1_uninf
)

# m72
full_model_uninf_m72 <- betareg(
  response_proportion ~ sex * vaccine,
  data = data_tidy_vacc_summed |> 
    dplyr::filter(infxn == "uninfected") |>
    dplyr::mutate(
      vaccine = factor(.data$vaccine, levels = c("m72", "h1", "mva85a", "h56", "bcg"))
    )
)
est_m72_uninf <- summary(full_model_uninf_m72)$coefficients[[1]]["sexmale", "Estimate"]
p_val_m72_uninf <- summary(full_model_uninf_m72)$coefficients[[1]]["sexmale", "Pr(>|z|)"]
ci_m72_uninf <- confint(full_model_uninf_m72)[2, c("2.5 %", "97.5 %")]
m72_row_uninf <- tibble(
  Vaccine = "M72",
  Estimate = est_m72_uninf,
  `95% CI Lower` = ci_m72_uninf[1],
  `95% CI Upper` = ci_m72_uninf[2],
  `P-value` = p_val_m72_uninf
)

# bcg
full_model_uninf_bcg <- betareg(
  response_proportion ~ sex * vaccine,
  data = data_tidy_vacc_summed |> 
    dplyr::filter(infxn == "uninfected") |>
    dplyr::mutate(
      vaccine = factor(.data$vaccine, levels = c("bcg", "h1", "mva85a", "h56", "m72"))
    )
)
est_bcg_uninf <- summary(full_model_uninf_bcg)$coefficients[[1]]["sexmale", "Estimate"]
p_val_bcg_uninf <- summary(full_model_uninf_bcg)$coefficients[[1]]["sexmale", "Pr(>|z|)"]
ci_bcg_uninf <- confint(full_model_uninf_bcg)[2, c("2.5 %", "97.5 %")]
bcg_row_uninf <- tibble(
  Vaccine = "BCG",
  Estimate = est_bcg_uninf,
  `95% CI Lower` = ci_bcg_uninf[1],
  `95% CI Upper` = ci_bcg_uninf[2],
  `P-value` = p_val_bcg_uninf
)

# Combine and adjust p-values for uninfected individuals
inf_tbl_uninf <- bind_rows(h56_row_uninf, mva85a_row_uninf, h1_row_uninf, m72_row_uninf, bcg_row_uninf)
inf_tbl_uninf <- inf_tbl_uninf |> 
  dplyr::mutate(`Q-value` = p.adjust(`P-value`, method = "holm")) |>
  dplyr::select(Vaccine, Estimate, `P-value`, `Q-value`, `95% CI Lower`, `95% CI Upper`)

inf_tbl_uninf <- inf_tbl_uninf |>
  dplyr::mutate(
    `P-value` = ifelse(`P-value` < 0.001, "<0.001", round(`P-value`, 3))
  )

# Plot with p-values
p_uninf <- ggplot(
  inf_tbl_uninf,
  aes(
    x = Vaccine,
    y = Estimate,
    ymin = `95% CI Lower`,
    ymax = `95% CI Upper`,
    color = Vaccine
  )
) +
  theme_cowplot_bg() +
  cowplot::background_grid(major = "y") + 
  geom_hline(yintercept = 0, linetype = "dashed", color = "black") +
  geom_pointrange() +
  labs(x = "Vaccine", y = "Sex effect") +
  geom_errorbar(aes(ymin = `95% CI Lower`, ymax = `95% CI Upper`), width = 0.1) +
  scale_color_manual(
    values = c("H56" = "red", "H1" = "blue", "MVA85A" = "purple", "M72" = "green", "BCG" = "orange")
  ) +
  scale_y_continuous(limits = c(NA, 1.5)) +
  theme(
    legend.position = "none",
    axis.title.x = element_text(size = 20),  # Increase x-axis label size
    axis.title.y = element_text(size = 20),   # Increase y-axis label size
    axis.text.x = element_text(size = 19),   # Adjust x-axis tick label size
    axis.text.y = element_text(size = 19)  
  ) +
  # Add p-value text labels
  geom_text(
    aes(label = `P-value`, y = `95% CI Upper`+ 0.04), # Adjust the y position for better placement
    vjust = -0.5,
    size = 6,
    color = "black"
  )

path_fig_uninf <- "Plot of estimates of effect sizes and CI uninfected.pdf"
ggsave(
  path_fig_uninf,
  p_uninf,
  width = 10,
  height = 6
)
```
