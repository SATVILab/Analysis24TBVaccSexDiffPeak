---
title: Analyse peak response
format:
  html:
    embed-resources: true
---

```{r}
#| include: false
library(ggplot2)
library(tibble)
library(tidyr)
theme_cowplot_bg <- function() {
  theme_cowplot() +
  theme(
    panel.background = element_rect(fill = "white"),
    plot.background = element_rect(fill = "white")
  )
}
```


## Data prep

Here we load the data:

```{r}
library(DataTidy24TBVaccSexDiff)
data("data_tidy_vacc_freq")
```

Now we calculate the summed response and the profile response, and then extract the peak response:

```{r}
data_tidy_vacc_summed <- data_tidy_vacc_freq |>
  vacc_calc_response_summed("response") |>
  vacc_calc_vaccine_induced_response("response") |>
  vacc_set_neg_to_zero("response") |>
  vacc_extract_peak() |>
  dplyr::filter(subset == "cd4")
data_tidy_vacc_summed
data_tidy_vacc_profile <- data_tidy_vacc_freq |>
  vacc_calc_response_profile("response") |>
  vacc_calc_vaccine_induced_response("response") |>
  vacc_extract_peak() |>
  dplyr::filter(subset == "cd4")
data_tidy_vacc_profile
```

## Data exploration

### Sample sizes

```{r}
data_tidy_vacc_summed |>
  dplyr::group_by(vaccine, prid, sex, timepoint, infxn) |>
  dplyr::summarise(count = dplyr::n(), .groups = "drop") |>
  dplyr::arrange(vaccine, prid, infxn, sex)
```

## Analysis

```{r}
#install.packages("cowplot")
library(cowplot)
```

Boxplot of summed response by infection status:

```{r}
boxplot1 <- ggplot(data_tidy_vacc_summed, aes(x = infxn, y = response, fill = infxn)) +
  geom_boxplot() +
  facet_wrap(~ vaccine)+
  labs(title = "Summed Response by Infection Status", x = "Infection Status", y = "Summed Response") +
  theme_cowplot_bg()
ggsave("Boxplot of Summed Response by Infection Status.png", boxplot1)
```

Boxplot of summed response by sex:

```{r}
boxplot2 <- ggplot(data_tidy_vacc_summed, aes(x = sex, y = response, fill = sex)) +
  geom_boxplot() +
  facet_wrap(~ vaccine)+
  labs(title = "Summed Response by Sex", x = "Sex", y = "Summed Response") +
  theme_cowplot_bg()
ggsave("Boxplot of Summed Response by Sex.png", boxplot2)
```

Boxplot of summed response by sex and infection status:

```{r}
boxplot3 <- ggplot(data_tidy_vacc_summed, aes(x = sex, y = response, fill = sex)) +
  geom_boxplot() +
  facet_grid(vaccine ~ infxn) +
  labs(title = "Summed Response by Sex and Infection Status", x = "Sex", y = "Summed Response") +
  theme_cowplot_bg()

# Save the plot
ggsave("Boxplot of Summed Response by Sex and Infection Status.png", boxplot3)
```

Perform Mann-Whitney Tests :

```{r}
Mann_Whitney_tests <- list(
  infxn = wilcox.test(response ~ infxn, data = data_tidy_vacc_summed),
  sex = wilcox.test(response ~ sex, data = data_tidy_vacc_summed)
)
p_values <- sapply(Mann_Whitney_tests, function(test) test$p.value)
p_values
p_adjusted <- p.adjust(p_values, method = "bonferroni")
p_adjusted
```

Obtain the square root of the summed response:

```{r}
data_tidy_vacc_summed <- data_tidy_vacc_summed |>
  dplyr::mutate(response_sqrt = sqrt(response))
```

Boxplot of square root transformed summed responses by sex and infection status:

```{r}
boxplot4 <- ggplot(data_tidy_vacc_summed, aes(x = sex, y = response_sqrt, fill = sex)) +
  geom_boxplot() +
  facet_grid(vaccine ~ infxn) +
  labs(title = "Square Root of Summed Response by Sex and Infection Status", x = "Sex", y = "Square Root of Summed Response") +
  theme_cowplot_bg() 

# Save the plot
ggsave("Boxplot of Square Root Summed Response by Sex and Infection Status.png", boxplot4)
```

Kruskal-Wallis Test:

```{r}
library(tidyr)
library(dplyr)
library(purrr)

vacc_inf_sex <- with(data_tidy_vacc_summed, interaction(vaccine, infxn, sex))
test <- kruskal.test(response_sqrt ~ vacc_inf_sex, data = data_tidy_vacc_summed)
test

results <- data_tidy_vacc_summed |>
  group_by(vaccine, infxn) |>
  nest() |>
  mutate(kruskal_test = map(data, ~ kruskal.test(response_sqrt ~ sex, data = .x)),
         p_value = map_dbl(kruskal_test, "p.value"))

results |>
  select(vaccine, infxn, p_value)
```

Skewness of Responses:

```{r}
histogram1 <- ggplot(data_tidy_vacc_summed, aes(x = response_sqrt)) +
  geom_histogram(binwidth = 0.05, fill = 'blue', color = 'black', alpha = 0.7) +
  facet_wrap(~ vaccine) +
  labs(title = "Histogram of Responses by Vaccine",
       x = "Square Root of Summed Response",
       y = "Frequency") +
  theme_cowplot_bg()
ggsave('Histogram of skewness of square root of summed responses by vaccine.png',histogram1)     
```

Load betareg package:

```{r}
#install.packages('betareg')
#install.packages('statmod')
#install.packages("numDeriv")
library(betareg)
library(statmod)
library(numDeriv)
```

Transform response to lie between 0 and 1 using proportions:

```{r}
data_tidy_vacc_summed <- data_tidy_vacc_summed |>
  dplyr::mutate(response_proportion = sqrt(response / 100))
```

Fit Beta Regression Model of Uninfected and Infected to examine the effect of interaction between sex and vaccine on response :

```{r}
beta_uninfected <- betareg(
  response_proportion ~ sex*vaccine,
  data = data_tidy_vacc_summed|> dplyr::filter(infxn == "uninfected")
)
summary(beta_uninfected)
```

Fit Beta Regression Model of Infected to examine the effect of interaction between sex and vaccine on response :

```{r}
beta_infected <- betareg(
  response_proportion ~ sex*vaccine,
  data = data_tidy_vacc_summed |> dplyr::filter(infxn == "infected")
  )
summary(beta_infected)
```

Create Residual Plots for the beta regression models of Uninfected and Infected:

```{r}
#residual plot for beta_uninfected model

data_uninfected <- data_tidy_vacc_summed %>%
  filter(infxn == "uninfected") %>%
  mutate(predicted = predict(beta_uninfected, type = "response"),
         residuals = residuals(beta_uninfected, type = "pearson"))

beta_residual1 <- ggplot(data_uninfected, aes(x = predicted, y = residuals)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
  labs(title = "Residual Plot for Beta Regression Model of Uninfected",
       x = "Predicted Values",
       y = "Residuals") +
  theme_cowplot_bg()
ggsave('Residual Plot for Beta Regression Model of Uninfected.png',beta_residual1)

#residual plot for beta_infected model

data_infected <- data_tidy_vacc_summed |>
  filter(infxn == "infected") |>
  mutate(predicted = predict(beta_infected, type = "response"),
         residuals = response_proportion - predicted)

beta_residual2 <- ggplot(data_infected, aes(x = predicted, y = residuals)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "red", linetype = "dashed") +
  labs(title = "Residual Plot for Beta Regression Model of Infected",
       x = "Predicted Values",
       y = "Residuals") +
  theme_cowplot_bg()
ggsave('Residual Plot for Beta Regression Model of Infected.png',beta_residual2)
```

Fit Beta Regression Models of Infected to examine the effect of sex on response for each vaccine :

```{r}
data_tidy_vacc_summed_inf <- data_tidy_vacc_summed |>  
    dplyr::filter(infxn == "infected") 

beta_h1_inf <- betareg( response_proportion ~ sex,  data = data_tidy_vacc_summed_inf |>
    dplyr::filter(vaccine == "h1")) 

beta_h56_inf <- betareg( response_proportion ~ sex,  data = data_tidy_vacc_summed_inf |> 
   dplyr::filter(vaccine == "h56")) 

beta_mva85a_inf <- betareg( response_proportion ~ sex,data = data_tidy_vacc_summed_inf |> 
   dplyr::filter(vaccine == "mva85a"))

#extract p-values
p_vec <- c(
  mean(summary(beta_h1_inf)$coefficients$mu[-1, "Pr(>|z|)"]),
  mean(summary(beta_h56_inf)$coefficients$mu[-1, "Pr(>|z|)"],
  mean(summary(beta_mva85a_inf)$coefficients$mu[-1, "Pr(>|z|)"]
)
p_vec

#Holm's Procedure
p.adjust(p_vec, method = "holm")
```

Fit Beta Regression Models of Uninfected to examine the effect of sex on response for each vaccine :

```{r}
data_tidy_vacc_summed_uninf <- data_tidy_vacc_summed |>  
    dplyr::filter(infxn == "uninfected") 

beta_h1_uninf <- betareg( response_proportion ~ sex, data = data_tidy_vacc_summed_uninf |>
    dplyr::filter(vaccine == "h1")) 

beta_h56_uninf <- betareg(response_proportion ~ sex,data = data_tidy_vacc_summed_uninf |> 
   dplyr::filter(vaccine == "h56")) 

beta_mva85a_uninf<-betareg(response_proportion ~ sex,data =data_tidy_vacc_summed_uninf |> 
   dplyr::filter(vaccine == "mva85a"))

beta_bcg_uninf <- betareg(response_proportion ~ sex, data =data_tidy_vacc_summed_uninf |> 
   dplyr::filter(vaccine == "bcg"))  

#extract p-values
p_vec <- c(
  mean(summary(beta_h1_uninf)$coefficients$mu[-1, "Pr(>|z|)"]),
  mean(summary(beta_h56_uninf)$coefficients$mu[-1, "Pr(>|z|)"],
  mean(summary(beta_mva85a_uninf)$coefficients$mu[-1, "Pr(>|z|)"],
  mean(summary(beta_bcg_uninf)$coefficients$mu[-1, "Pr(>|z|)"]
)
p_vec

#Holm's Procedure
p.adjust(p_vec, method = "holm")
```

```{r}
pkg_vec <- c("betareg", "car", "lmtest")
for (x in pkg_vec) {
  if (!requireNamespace(x, quietly = TRUE)) {
    renv::install(x, prompt = FALSE)
  }
}
library(betareg)
library(car)
library(lmtest)
```

Perform Simultaneous Hypothesis Testing for Infected :

```{r}
full_model_inf <- betareg(response_proportion ~ sex*vaccine, data = data_tidy_vacc_summed|>
                 dplyr::filter(infxn == "infected"))

null_model_inf <- betareg(response_proportion ~ vaccine, data = data_tidy_vacc_summed|>
                dplyr::filter(infxn == "infected"))

summary_full <- summary(full_model_inf)
summary_null <- summary(null_model_inf)

#extract p-values
p_vec <- c(mean(summary_full$coefficients$mu[-1, "Pr(>|z|)"]), 
           mean(summary_null$coefficients$mu[-1, "Pr(>|z|)"]))
p_vec

#Holm's Correction
p.adjust(p_vec, method = "holm")

# Wald test
Wald_inf <- car::linearHypothesis(full_model_inf, c("sexmale = 0","sexmale:vaccineh56 = 0", "sexmale:vaccinemva85a = 0"))

# likelihood ratio test
likelihood_inf <- lmtest::lrtest(full_model_inf, null_model_inf)

# extract p-values
p_vec <- c(Wald_inf$`Pr(>Chisq)`[2],likelihood_inf$`Pr(>Chisq)`[2])
p_vec

# Holm's Correction
p.adjust(p_vec, method = "holm")
```

Perform Simultaneous Hypothesis Testing for Uninfected :

```{r}
full_model_uninf <- betareg(response_proportion ~ sex*vaccine, data = data_tidy_vacc_summed|>
                 dplyr::filter(infxn == "uninfected"))

null_model_uninf <- betareg(response_proportion ~ vaccine, data = data_tidy_vacc_summed|>
                dplyr::filter(infxn == "uninfected"))

summary_full_uninf <- summary(full_model_uninf)
summary_null_uninf <- summary(null_model_uninf)

#extract p-values
p_vec <- c(mean(summary_full_uninf$coefficients$mu[-1, "Pr(>|z|)"]), 
           mean(summary_null_uninf$coefficients$mu[-1, "Pr(>|z|)"]))
p_vec

#Holm's Correction
p.adjust(p_vec, method = "holm")

# Wald test
Wald_uninf <- car::linearHypothesis(full_model_uninf, c("sexmale = 0","sexmale:vaccineh1 = 0","sexmale:vaccineh56 = 0", "sexmale:vaccinemva85a = 0"))

# likelihood ratio test
likelihood_uninf <- lmtest::lrtest(full_model_uninf, null_model_uninf)

# extract p-values
p_vec <- c(Wald_uninf$`Pr(>Chisq)`[2],likelihood_uninf$`Pr(>Chisq)`[2])
p_vec

# Holm's Correction
p.adjust(p_vec, method = "holm")
```

## Response Profile

Boxplot of Response by Sex and Infection Status 

```{r}
boxplot1 <- ggplot(data_tidy_vacc_profile, aes(x = sex, y = response, fill = sex)) +
  geom_boxplot() +
  facet_grid(vaccine + infxn ~ cyt_combn, scales = "free") +
  labs(title = "Response by Sex and Infection Status for each Cytokine Combination",
       x = "Sex",
       y = "Response") +
  theme_cowplot_bg() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))    

ggsave('Response by Sex and Infection Status for each CYtokine Combination.png',boxplot1)  
```

Load gamlss package:

```{r}
#install.packages('gamlss')
library(gamlss)
```

